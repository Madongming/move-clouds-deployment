---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: singledeployments.deployment.github.com
spec:
  group: deployment.github.com
  names:
    kind: SingleDeployment
    listKind: SingleDeploymentList
    plural: singledeployments
    shortNames:
    - sd
    singular: singledeployment
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SingleDeployment is the Schema for the singledeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SingleDeploymentSpec defines the desired state of SingleDeployment
            properties:
              args:
                description: Args Parameter list for the startup command, if empty,
                  use the buit-in CMD/ENTRYPOINT
                items:
                  type: string
                type: array
              environments:
                description: Environments is the environment variable pair(name, value)
                  when the instance is running, so it must be even.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              expose:
                description: Expose your instance
                properties:
                  ingressDomain:
                    description: IngressDomain the instance will be added to ingress
                      and accessed through the unified portal.
                    type: string
                  mode:
                    description: Mode deployment mode, is NodePort or Ingress
                    type: string
                  nodePort:
                    description: NodePort the install will be expose by NodePort mode
                      with the port number
                    format: int32
                    type: integer
                  servicePort:
                    description: ServicePort the service resource use the port
                    format: int32
                    type: integer
                required:
                - mode
                type: object
              image:
                description: Image The image used for deployment. If this item is
                  empty, build will be used to build the image, so only one of this
                  item and build can be empty. If both exist, this item will work
                type: string
              port:
                description: Port The port this instance accesses, and the port you
                  want to expose
                format: int32
                type: integer
              replicas:
                description: Replicas How many replicas you want deployment, default
                  is 1
                format: int32
                type: integer
              startCmd:
                description: StartCmd Start command, if empty, use the buit-in CMD/ENTRYPOINT
                type: string
            required:
            - expose
            - port
            type: object
          status:
            description: SingleDeploymentStatus defines the observed state of SingleDeployment
            properties:
              conditions:
                items:
                  description: Condition save the condition info for every condition
                    when call deployment, statefulset and service
                  properties:
                    lastProbeTime:
                      description: LastProbeTime indicate the time when check the
                        status of this condition
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime indicate the time when this
                        condition happen to create or update
                      format: date-time
                      type: string
                    message:
                      description: Message indicate the message of this condition.
                        When status is false it must exist
                      type: string
                    reason:
                      description: Reason describe why this condition is not ready
                      type: string
                    status:
                      description: Status indicate the status of this condition. It
                        can be true or false
                      type: string
                    type:
                      description: Type indicate which type this condition is. it
                        can be deployment, statefulset or service
                      type: string
                  required:
                  - lastProbeTime
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message Execution message
                type: string
              phase:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Phase Execution phase: Creating | Running | Success |
                  Failed | Deleting'
                type: string
              reason:
                description: Reason If it fails, what is the reason
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
